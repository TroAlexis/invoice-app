@use "styles/_colors.scss";
@use "styles/_variables.scss";

@mixin hover($outline: false) {
  $outline-selector: ":not(.is-outline)";

  @if $outline {
    $outline-selector: "";
  }

  &#{$outline-selector} {
    &:hover,
    &:focus {
      @content;
    }
  }
}

.wrapper {
  display: inline-flex;
  flex: 1;
  align-items: center;
  justify-content: center;
}

.button {
  position: relative;
  display: inline-flex;
  align-items: center;
  padding: 1.6rem 2.4rem;
  font-weight: 700;
  line-height: 1;
  border: 0;
  border-radius: 24px;
  outline: 0;
  cursor: pointer;
  opacity: 1;
  transition: variables.$transition-fast;
  transition-property: opacity, background-color;

  &.size-regular {
    font-size: 1.2rem;
  }

  &.size-medium {
    font-size: 1.6rem;
  }

  &.weight-heavy {
    font-weight: 700;
  }

  &.weight-regular {
    font-weight: 400;
  }

  &.is-violet {
    color: colors.$white;
    background-color: colors.$violet-400;

    @include hover {
      opacity: 0.9;
    }

    &.is-outline {
      color: colors.$violet-400;

      &.shade-light {
        color: colors.$violet-300;
      }
    }
  }

  &.is-secondary {
    color: colors.$violet-200;
    background-color: colors.$grey-110;
    transition-property: background-color;

    @include hover {
      background-color: colors.$grey-300;
    }
  }

  &.is-grey {
    color: colors.$grey-500;
    background-color: colors.$black-200;

    @include hover {
      background-color: colors.$black-500;
    }
  }

  &.is-black {
    @include hover(true) {
      opacity: 0.9;
    }

    &.is-outline {
      color: colors.$black-500;
    }
  }

  &.is-red {
    color: colors.$white;
    background-color: colors.$red-400;

    @include hover {
      background-color: colors.$red-200;
    }
  }

  &.is-outline {
    padding: 0;
    background-color: transparent;
    border: 0;
    cursor: pointer;
    appearance: none;
  }

  &.is-linkish {
    text-decoration: underline;
  }

  &.is-fluid {
    display: flex;
    width: auto;
  }

  &.has-icon {
    padding: 0.8rem 1.5rem 0.8rem 0.8rem;
  }

  > *:not(.loader) {
    transition: variables.$transition-fast;
    transition-property: opacity;
  }

  &.loading {
    > *:not(.loader) {
      opacity: 0;
    }
  }
}

.icon {
  margin-right: 1.6rem;
}

.loader {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
